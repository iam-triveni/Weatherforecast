trigger:
  branches:
    include:
      - main

pool:
  vmImage: ubuntu-latest

jobs:

# ─── .NET BUILD JOB ───────────────────────────────────────────────────────────
- job: BuildDotNet
  displayName: '.NET Build and Publish'
  steps:
    - task: UseDotNet@2
      displayName: 'Install .NET SDK'
      inputs:
        packageType: 'sdk'
        version: '8.x'

    - script: dotnet restore WeatherForecastApp/WeatherForecastApp.csproj
      displayName: 'Restore NuGet packages'

    - script: dotnet build WeatherForecastApp/WeatherForecastApp.csproj --configuration Release --no-restore
      displayName: 'Build project'

    - script: |
        dotnet publish WeatherForecastApp/WeatherForecastApp.csproj \
          --configuration Release \
          --output $(Build.ArtifactStagingDirectory)/app \
          --no-build
      displayName: 'Publish project'

    - task: PublishBuildArtifacts@1
      displayName: 'Publish .NET App Artifact'
      inputs:
        pathToPublish: '$(Build.ArtifactStagingDirectory)/app'
        artifactName: 'AppDrop'
        publishLocation: 'Container'

# ─── TERRAFORM PACKAGE JOB ────────────────────────────────────────────────────
- job: PublishTerraform
<<<<<<< HEAD
  displayName: 'Zip and Publish Terraform Artifact'
  dependsOn: BuildDotNet
  steps:
  - script: |
      cd $(Build.SourcesDirectory)
      zip -r $(Build.ArtifactStagingDirectory)/terraform.zip iac
    displayName: 'Zip Terraform folder'

  - task: PublishBuildArtifacts@1
    displayName: 'Publish Terraform ZIP Artifact'
    inputs:
      pathToPublish: '$(Build.ArtifactStagingDirectory)/terraform.zip'
      artifactName: 'terraform'
      publishLocation: 'Container'
=======
  displayName: 'Zip & Publish Terraform'
  dependsOn: BuildDotNet
  steps:
    - script: |
        echo "Packaging Terraform config..."
        cd $(Build.SourcesDirectory)/iac/app_svc/terraform
        zip -r $(Build.ArtifactStagingDirectory)/terraform.zip .
      displayName: 'Zip Terraform Folder'

    - task: PublishBuildArtifacts@1
      displayName: 'Publish Terraform Artifact'
      inputs:
        pathToPublish: '$(Build.ArtifactStagingDirectory)/terraform.zip'
        artifactName: 'Terraform'
        publishLocation: 'Container'
>>>>>>> 2af6f00 (Update azure-pipelines.yml for Azure Pipelines to Publish Terraform Artifacts)
